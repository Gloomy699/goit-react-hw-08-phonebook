{"version":3,"sources":["routes/index.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","images/avatar.png","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/Loading/Loading.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/phonebook/phonebook-actions.js","components/UserMenu/UserMenu.module.css","redux/phonebook/phonebook-reducer.js"],"names":["Navigation","isAuthenticated","useSelector","authSelectors","getIsAuthenticated","exact","to","routes","className","activeClassName","AuthNav","mapDispatchToProps","onLogout","authOperations","logout","connect","state","getName","getAuthUserName","styles","flex","src","avatar","Button","variant","onClick","AppBar","Navbar","expand","bg","Brand","href","Nav","Loader","style","width","height","display","alignItems","justifyContent","marginRight","Spinner","animation","role","PrivateRoute","Component","component","redirectTo","routeProps","render","props","defaultProps","PublicRoute","restricted","HomeView","lazy","ContactsView","RegisterView","LoginView","NotFound","getCurrentUser","useEffect","Container","Row","Col","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfigAuth","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","phonebook","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","loading","document","querySelector","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialState","name","email","user","createReducer","authActions","_","payload","token","setError","error","lodaing","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credential","dispatch","a","post","res","data","login","getState","console","log","getToken","get","Boolean","getError","authLoading","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","module","exports","contacts","filter","id"],"mappings":"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","file":"static/js/main.d37de7d6.chunk.js","sourcesContent":["export default {\n    home:'/',\n    contacts:'/contacts',\n    register:'/register',\n    login:'/login'\n}","import { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport routes from './../../routes';\nimport {authSelectors} from './../../redux/auth'\n\nfunction Navigation(){\n\n    const isAuthenticated = useSelector(authSelectors.getIsAuthenticated)\n\n    return(\n        <>\n            <NavLink exact to={routes.home} className=\"NavLink\" activeClassName=\"NavLink--active\">На главную</NavLink>\n            {isAuthenticated && <NavLink to={routes.contacts} className=\"NavLink\" activeClassName=\"NavLink--active\">Контакты</NavLink>}\n        </>\n    )\n}\n\n\n\nexport default Navigation","import { NavLink } from 'react-router-dom';\nimport routes from './../../routes';\n\nexport default function AuthNav(){\n\n    return(\n        <>\n        <NavLink exact to={routes.register} className=\"NavLink\" activeClassName=\"NavLink--active\">Регистрация</NavLink>\n        <NavLink to={routes.login} className=\"NavLink\" activeClassName=\"NavLink--active\">Войти</NavLink>\n        </>\n    )\n}","export default __webpack_public_path__ + \"static/media/avatar.fc82e31a.png\";","import { Button } from \"react-bootstrap\";\n\nimport styles from './UserMenu.module.css';\nimport avatar from './../../images/avatar.png';\n\nimport {connect} from 'react-redux';\nimport { authSelectors, authOperations } from './../../redux/auth';\n\nfunction UserMenu({getName, onLogout}){\n    return(\n        <div className={styles.flex}>\n            <img src={avatar} className={styles.avatar}></img>\n            <b>Добро пожаловать, {getName}</b>\n            <Button variant=\"primary\" onClick={onLogout}>Выйти</Button>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    getName: authSelectors.getAuthUserName(state)\n})\n\nconst mapDispatchToProps = {\n    onLogout: authOperations.logout\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import Navigation from './../Navigation';\nimport AuthNav from './../AuthNav';\nimport UserMenu from './../UserMenu';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { useSelector} from 'react-redux';\nimport {authSelectors} from './../../redux/auth'\n\n\nfunction AppBar(){\n    const isAuthenticated = useSelector(authSelectors.getIsAuthenticated)\n    return(\n        <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"/\">Phone book</Navbar.Brand>\n            <Nav className=\"mr-auto\">\n                <Navigation />\n            </Nav>\n            <Nav>\n                {isAuthenticated ? <UserMenu/> : <AuthNav/>}\n            </Nav>\n            \n        </Navbar>\n    )\n}\n\n\nexport default AppBar","import { Spinner } from \"react-bootstrap\";\n\nexport default function Loader(){\n    return(\n        <div style={{width:'100%', height:'150px',display:'flex', alignItems:'center', justifyContent:'center'}}>\n             \n            <h2 style={{marginRight:'15px'}}>Загрузка</h2>\n            <Spinner \n                animation=\"border\" \n                role=\"status\" \n            />\n        \n        </div>\n    )\n}","import { useSelector } from \"react-redux\"\nimport { Redirect, Route } from \"react-router-dom\"\nimport {authSelectors} from './../redux/auth'\n\n\nconst PrivateRoute = ({component:Component, redirectTo, ...routeProps}) =>{\n    const isAuthenticated = useSelector(authSelectors.getIsAuthenticated)\n   \n    return <Route \n        {...routeProps} \n        render={props => \n            isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n        }\n    />\n}\n\nPrivateRoute.defaultProps = {\n    redirectTo:'/'\n}\n\n\n\nexport default PrivateRoute","import { useSelector } from \"react-redux\"\nimport { Redirect, Route } from \"react-router-dom\"\nimport {authSelectors} from './../redux/auth'\n\n\nconst PublicRoute = ({component:Component, redirectTo, ...routeProps}) =>{\n    const isAuthenticated = useSelector(authSelectors.getIsAuthenticated)\n    return <Route \n        {...routeProps}\n\n        render={props => \n            isAuthenticated && routeProps.restricted ? <Redirect to={redirectTo} /> : <Component {...props} />\n        }\n    />\n}\n\nPublicRoute.defaultProps = {\n    redirectTo:'/'\n}\n\n\nexport default PublicRoute;","\n\nimport AppBar from './components/AppBar';\n// eslint-disable-next-line no-unused-vars\nimport { Route, Switch } from 'react-router-dom';\nimport routes from './routes';\nimport { Suspense, lazy, useEffect } from 'react';\nimport Loading from './components/Loading';\nimport { Col, Row, Container } from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport {authOperations} from './redux/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\n\nconst HomeView = lazy(() => import('./views/HomeView'))\nconst ContactsView = lazy(() => import('./views/ContactsView'))\nconst RegisterView = lazy(() => import('./views/RegisterView'))\nconst LoginView = lazy(() => import('./views/LoginView'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n\n\n\nfunction App({getCurrentUser}){\n\n    useEffect(()=>{\n        getCurrentUser();\n    }, [getCurrentUser])\n\n    return (\n\n        <Container>\n            <Row>\n                <Col>\n                    <AppBar/>\n\n                    <section>\n                        <Suspense fallback={<Loading/>}>\n                            <Switch>\n                                <PublicRoute exact path={routes.home} component={HomeView} />\n                                <PrivateRoute \n                                    path={routes.contacts} \n                                    component={ContactsView} \n                                    redirectTo={routes.login}\n                                />\n                                <PublicRoute \n                                    path={routes.register} \n                                    component={RegisterView}\n                                    restricted\n                                    redirectTo={routes.contacts}\n                                />\n                                <PublicRoute \n                                    path={routes.login} \n                                    component={LoginView} \n                                    restricted\n                                    redirectTo={routes.contacts}\n                                />\n                                <PublicRoute component={NotFound} />\n                            </Switch>\n                        </Suspense>\n                    </section>\n                </Col>\n            </Row>\n        </Container>\n\n    );\n}\n\nconst mapDispatchToProps = {\n    getCurrentUser: authOperations.getCurrentUser\n}\n\nexport default connect(null, mapDispatchToProps)(App)\n","\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport phonebookReducer from './../redux/phonebook/phonebook-reducer'\nimport { authReducer } from './../redux/auth';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger'\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER\n  } from 'redux-persist'\n\n\nconst middleware = [...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }), \n  logger\n]\n\nconst persistConfigAuth = {\n  key: 'auth',\n  storage,\n  whitelist:['token']\n}\n\nconst store = configureStore({\n    reducer:{\n      auth: persistReducer(persistConfigAuth, authReducer),\n      phonebook:phonebookReducer\n    },\n    middleware,\n    devTools:process.env.NODE_ENV === 'development'\n})\n\n\nconst persistor = persistStore(store)\n\nexport default {store, persistor};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './base.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <Provider store={store.store}>\n        <PersistGate loading={null} persistor={store.persistor}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </PersistGate>\n    </Provider>, \ndocument.querySelector('#root'));\n","import {createAction} from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest')\nconst registerSuccess = createAction('auth/registerSuccess')\nconst registerError = createAction('auth/registerError')\n\nconst loginRequest = createAction('auth/loginRequest')\nconst loginSuccess = createAction('auth/loginSuccess')\nconst loginError = createAction('auth/loginError')\n\nconst logoutRequest = createAction('auth/logoutRequest')\nconst logoutSuccess = createAction('auth/logoutSuccess')\nconst logoutError = createAction('auth/logoutError')\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest')\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess')\nconst getCurrentUserError = createAction('auth/getCurrentUserError')\n\nexport default{\n    registerRequest,\n    registerSuccess,\n    registerError,\n\n    loginRequest,\n    loginSuccess,\n    loginError,\n\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError\n}","import { combineReducers } from 'redux';\nimport {createReducer} from '@reduxjs/toolkit';\n\nimport authActions from './auth-actions';\n\nconst initialState = {name: null, email: null};\n\nconst user = createReducer(initialState, {\n    [authActions.registerSuccess]:(_, {payload}) => payload.user,\n    [authActions.loginSuccess]:(_, {payload}) => payload.user,\n    [authActions.logoutSuccess]:() => initialState,\n    [authActions.getCurrentUserSuccess]:(_, {payload}) => payload,\n\n\n});\n\nconst token = createReducer(null, {\n    [authActions.registerSuccess]:(_, {payload}) => payload.token,\n    [authActions.loginSuccess]:(_, {payload}) => payload.token,\n    [authActions.logoutSuccess]:() => null\n});\n\nconst setError = (_, {payload}) => payload;\n\nconst error = createReducer(null, {\n    [authActions.registerError]: setError,\n    [authActions.loginError]: setError,\n    [authActions.logoutError]: setError,\n    [authActions.getCurrentUserError]: setError\n\n});\n\nconst lodaing = createReducer(false, {\n    [authActions.registerRequest]:()=> true,\n    [authActions.loginRequest]:()=> true,\n    [authActions.logoutRequest]:()=> true,\n    [authActions.getCurrentUserRequest]:()=> true,\n\n\n    [authActions.registerSuccess]:()=> false,\n    [authActions.loginSuccess]:()=> false,\n    [authActions.logoutSuccess]:()=> false,\n    [authActions.getCurrentUserSuccess]:()=> false,\n\n    [authActions.registerError]:()=> false,\n    [authActions.loginError]:()=> false,\n    [authActions.logoutError]:()=> false,\n    [authActions.getCurrentUserError]:()=> false,\n})\n\n\n\nexport default combineReducers({\n    user, \n    token,\n    error,\n    lodaing\n})","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n    set(token){\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset(){\n        axios.defaults.headers.common.Authorization = '';\n    }\n}\n\nconst register = credential => async dispatch => {\n\n    dispatch(authActions.registerRequest());\n\n    try{\n        const res = await axios.post('/users/signup', credential);\n        token.set(res.data.token);\n        dispatch(authActions.registerSuccess(res.data));\n        dispatch(authActions.registerError(''));\n    }catch (error){\n        dispatch(authActions.registerError(error));\n    }\n}\n\nconst login = credential => async dispatch => {\n    dispatch(authActions.loginRequest());\n\n    try{\n        const res = await axios.post('/users/login', credential);\n        token.set(res.data.token);\n        dispatch(authActions.loginSuccess(res.data));\n        dispatch(authActions.loginError(''));\n    }catch (err){\n        dispatch(authActions.loginError(err));\n    }\n}\n\n\nconst logout = () => async dispatch => {\n    dispatch(authActions.logoutRequest());\n\n    try{\n        await axios.post('/users/logout')\n        token.unset();\n        dispatch(authActions.logoutSuccess());\n    }catch (err){\n        dispatch(authActions.logoutError(err));\n\n    }\n}\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n\n    console.log(getState())\n\n    const {auth:{token:getToken}} = getState();\n\n    if(!getToken){\n        return;\n    }\n\n    token.set(getToken);\n\n    dispatch(authActions.getCurrentUserRequest());\n\n    try{\n        const res = await axios.get('/users/current')\n        dispatch(authActions.getCurrentUserSuccess(res.data));\n    }catch (err){\n        dispatch(authActions.getCurrentUserError(err));\n\n    }\n}\n\nexport default {\n    register,\n    login,\n    logout,\n    getCurrentUser\n}\n","import { connect } from \"react-redux\"\n\nconst getIsAuthenticated = state =>  Boolean(state.auth.token);\nconst getAuthUserName = state => state.auth.user.name;\nconst getError = state => state.auth.error;\nconst authLoading = state => state.auth.loading;\n\nexport default {\n    getIsAuthenticated,\n    getAuthUserName,\n    getError,\n    authLoading\n}","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('phonebook/fetchContactRequest')\nexport const fetchContactSuccess = createAction('phonebook/fetchContactSuccess')\nexport const fetchContactError = createAction('phonebook/fetchContactError')\n\nexport const addContactRequest = createAction('phonebook/addContactRequest')\nexport const addContactSuccess = createAction('phonebook/addContactSuccess')\nexport const addContactError = createAction('phonebook/addContactError')\nexport const findContactName = createAction('phonebook/findContactName')\n\nexport const deleteContactRequest = createAction('phonebook/deleteContactRequest')\nexport const deleteContactSuccess = createAction('phonebook/deleteContactSuccess')\nexport const deleteContactError = createAction('phonebook/deleteContactError')\n\n\nexport const changeFilter = createAction('phonebook/changeFilter')\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"UserMenu_flex__1hSV1\",\"avatar\":\"UserMenu_avatar__2e7Jj\"};","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    changeFilter\n} from './phonebook-actions';\n\nconst contacts = createReducer([], {\n    [fetchContactSuccess]: (_, {payload}) => payload,\n    [addContactSuccess]: (state, {payload}) => [...state, payload],\n    [deleteContactSuccess]: (state, {payload}) => state.filter( ({id}) => id !== payload)\n})\n\nconst filter = createReducer('', {\n    [changeFilter]: (_, {payload}) => payload\n})\n\nconst loading = createReducer(false, {\n    [fetchContactRequest]: () => true,\n    [fetchContactSuccess]: () => false,\n    [fetchContactError]: () => false,\n\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n\n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false,\n})\n\nexport default combineReducers({\n    contacts,\n    filter,\n    loading\n})"],"sourceRoot":""}