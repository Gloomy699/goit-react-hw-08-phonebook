{"version":3,"sources":["redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView/ContactsView.js"],"names":["getFilter","state","phonebook","filter","getContacts","contacts","getLoading","loading","getFilterContacts","createSelector","name","toLowerCase","includes","dispatch","a","fetchContactRequest","axios","get","data","fetchContactSuccess","fetchContactError","credential","addContactRequest","post","addContactSuccess","addContactError","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getState","contact","INITIAL_STATE","number","ContactForm","onFindName","onAddContact","useState","setState","handleChange","target","value","prevState","reset","className","onSubmit","evt","preventDefault","console","log","length","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","htmlFor","type","onChange","Button","variant","style","margin","display","defaultProps","connect","phonebookOperations","ContactList","fetchContacts","removeContactId","useEffect","Table","striped","bordered","hover","size","width","map","onClick","phonebookSelectors","Filter","onFilter","e","changeFilter","ContactsView","Container","Row","Col","sm"],"mappings":"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","file":"static/js/4.277897de.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nconst getFilter = state => state.phonebook.filter;\nconst getContacts = state => state.phonebook.contacts;\nconst getLoading = state => state.phonebook.loading;\n\n\nconst getFilterContacts = createSelector(\n    [getFilter, getContacts], \n    (filter, contacts) =>{\n        return contacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase()))\n    })\n\nexport default{\n    getFilter,\n    getContacts,\n    getLoading,\n    getFilterContacts\n}","import axios from 'axios';\nimport {     \n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    findContactName,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError } from './phonebook-actions';\n\nconst fetchContact = () => async dispatch => {\n\n    dispatch(fetchContactRequest())\n\n    try{\n        const { data } = await axios.get('/contacts');\n        dispatch(fetchContactSuccess(data))\n    }catch(err){\n        dispatch(fetchContactError(err))\n    }\n\n}\n\nconst addContact = credential => async dispatch => {\n\n    dispatch(addContactRequest())\n    try{\n        const { data } = await axios.post('/contacts', credential);\n        dispatch(addContactSuccess(data))\n    }catch(err){\n        dispatch(addContactError(err))\n    }\n\n}\n\nconst deleteContact = id => async dispatch => {\n    dispatch(deleteContactRequest())\n\n    try{\n        await axios.delete(`/contacts/${id}`);\n        dispatch(deleteContactSuccess(id))\n    }catch(err){\n        dispatch(deleteContactError(err))\n    }\n\n}\n\nconst onFindName = name => (dispatch, getState) =>{\n    const { phonebook: {contacts}} = getState();\n\n    return contacts.filter(contact => contact.name === name)\n}\n\n\n\nexport default{\n    fetchContact,\n    addContact,\n    deleteContact,\n    onFindName\n}","import React, { useState } from 'react';\nimport './ContactForm.css';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { connect } from 'react-redux';\n\n\nimport {phonebookOperations, phonebookSelectors} from './../../redux/phonebook'\nimport { Button } from 'react-bootstrap';\n\n\nconst INITIAL_STATE = {\n    name:\"\",\n    number:\"\"\n}\n\nconst ContactForm = ({ onFindName, onAddContact }) => {\n\n    const [state, setState] = useState({...INITIAL_STATE})\n    const {name, number} = state;\n\n\n    const handleChange = ({target}) => {\n        const { name, value } = target;\n        \n        setState(prevState => ({...prevState, [name]:value}))\n    }\n\n    const handleSubmit = evt =>{\n        evt.preventDefault();\n\n\n        if(!name || !number){\n            toast.error(\"Упс. Поле имя или номер пусты.\", {\n                position: \"top-left\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                });\n            return false; \n        }\n\n        console.log(onFindName(name));\n\n        if(onFindName(name).length !== 0){\n            toast.warn(name + ' Такой номер уже добавлен в контакты.', {\n                position: \"top-left\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                });\n            return false;\n        }\n\n        onAddContact(state);\n\n        reset();\n    }\n\n\n    const reset = () => {\n        setState({ ...INITIAL_STATE });\n    };\n\n    return (\n        <>\n        <form className=\"phonebook\" onSubmit={handleSubmit}>\n            <label htmlFor=\"name_1\">Имя</label><br/>\n            <input type=\"text\" name=\"name\" id=\"name_1\" value={name} onChange={handleChange}/>\n            <br/>\n            <label htmlFor=\"phone_1\">Номер</label><br/>\n            <input type=\"tel\" name=\"number\" id=\"phone_1\" value={number} onChange={handleChange}/>\n            <br/>\n            <br/>\n             <Button variant=\"primary\" type=\"submit\" style={{margin:'auto', display: 'block'}}>Добавить контакт</Button>\n        </form>\n        <ToastContainer />\n        </>\n\n    );\n    \n}\n\nContactForm.defaultProps = {\n    onAddContact:() => {},\n    onFindName:() => {}\n}\n\nContactForm.propTypes = {\n    onAddContact:PropTypes.func,\n    onFindName:PropTypes.func\n}\n \n\nconst mapDispatchToProps = dispatch => ({\n    onAddContact: credential => dispatch(phonebookOperations.addContact(credential)),\n    onFindName: (name) => dispatch(phonebookOperations.onFindName(name))\n})\nexport default connect(null, mapDispatchToProps)(ContactForm)","import React, { useEffect } from 'react';\nimport  PropTypes from 'prop-types';\nimport {Table, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\n\nimport {phonebookOperations, phonebookSelectors} from './../../redux/phonebook';\n\nconst ContactList = ({loading, contacts, fetchContacts, removeContactId }) => {\n\n    // \n    useEffect(()=>{\n        console.log(fetchContacts())\n    }, [fetchContacts])\n\n    return(\n        <>  \n            {loading && <h3>Загрузка</h3>}\n\n\n            {contacts.length != 0 && \n            <>\n                <br/>\n                <Table striped bordered hover size=\"sm\">\n                    <thead>\n                        <tr>\n                        <th>Имя</th>\n                        <th>Номер</th>\n                        <th width=\"10%\"></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            contacts.map(({id, name, number}) => (\n                                \n                                <tr key={id}>\n                                    <td>{name}</td>\n                                    <td>{number}</td>\n                                    <td><Button variant=\"danger\" onClick={()=>{removeContactId(id)}}>Удалить</Button> </td>\n                                </tr>\n                                \n                            ))\n                        }\n                    </tbody>\n                </Table>\n                </>\n            }\n        </>\n    )\n}\n\nContactList.defaultProps = {\n    contacts:[],\n    removeContactId:() =>{}\n}\nContactList.propTypes = {\n    contacts:PropTypes.array.isRequired,\n    removeContactId:PropTypes.func\n}\n\n\nconst mapStateToProps = state =>({\n    loading:phonebookSelectors.getLoading(state),\n    contacts:phonebookSelectors.getFilterContacts(state)\n})\n\n\nconst mapDispatchToProps = dispatch =>({\n    fetchContacts: () => dispatch(phonebookOperations.fetchContact()),\n    removeContactId: id => dispatch(phonebookOperations.deleteContact(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)","import React from 'react'\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nimport {phonebookSelectors, changeFilter} from './../../redux/phonebook';\n\n\nconst Filter = ({filter, onFilter}) => {\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n    }\n\n    return(\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"filter_1\">Найти контакт по имени</label><br/>\n            <input type=\"text\" name=\"filter\" id=\"filter_1\" value={filter}  onChange={onFilter} />\n        </form>\n    );\n}\n\nFilter.defaultProps = {\n    filter:'',\n    onFilter:()=>{}\n}\nFilter.propTypes = {\n    filter:PropTypes.string.isRequired,\n    onFilter:PropTypes.func\n}\n\nconst mapStateToProps = state => ({\n    filter:phonebookSelectors.getFilter(state)\n});\n\nconst  mapDispatchToprops = dispatch =>({\n    onFilter: e => dispatch(changeFilter(e.target.value))\n})\n\nexport default connect(mapStateToProps, mapDispatchToprops)(Filter)","import { Container, Row, Col } from 'react-bootstrap';\nimport ContactForm from './../../components/ContactForm';\nimport ContactList from './../../components/ContactList'\nimport Filter from './../../components/Filter'\n\nexport default function ContactsView(){\n    return(\n        <>\n            <Container>\n                <Row>\n                    <Col sm={3}>\n                        <h2>Телефонная книга</h2>\n                        <ContactForm />\n                    </Col>\n                    <Col sm={9}>\n                        <h2>Контакты</h2>\n                        <Filter/>\n                        <ContactList /> \n                    </Col>\n                </Row>\n            </Container>\n        </>\n    )\n}"],"sourceRoot":""}